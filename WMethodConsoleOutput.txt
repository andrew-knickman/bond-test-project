Test Generation Using the W-method. V2.0. August 1, 2013

Enter filename: FSM input from:  Bond
States: 6
Edges 71
Input alphabet:
(
)
0
1
2
3
4
5
6
7
8
9

Output alphabet:
no
yes

From 	 Input/Output 	 To
1	 4/no		 1
1	 5/no		 1
1	 (/no		 2
1	 7/no		 1
1	 6/no		 1
1	 2/no		 1
1	 )/no		 1
1	 0/no		 1
1	 8/no		 1
1	 3/no		 1
1	 1/no		 1
1	 9/no		 1
2	 7/no		 2
2	 0/no		 3
2	 )/no		 2
2	 9/no		 2
2	 3/no		 2
2	 5/no		 2
2	 8/no		 2
2	 2/no		 2
2	 4/no		 2
2	 1/no		 2
2	 (/no		 2
2	 6/no		 2
3	 0/no		 4
3	 1/no		 2
3	 2/no		 2
3	 6/no		 2
3	 3/no		 2
3	 (/no		 2
3	 5/no		 2
3	 8/no		 2
3	 9/no		 2
3	 )/no		 2
3	 4/no		 2
3	 7/no		 2
4	 3/no		 2
4	 4/no		 2
4	 0/no		 2
4	 1/no		 2
4	 (/no		 2
4	 7/no		 5
4	 5/no		 2
4	 9/no		 2
4	 2/no		 2
4	 6/no		 2
4	 8/no		 2
4	 )/no		 2
5	 2/no		 5
5	 3/no		 5
5	 0/no		 5
5	 1/no		 5
5	 (/no		 5
5	 8/no		 5
5	 9/no		 5
5	 5/no		 5
5	 6/no		 5
5	 7/no		 5
5	 )/yes		 6
6	 5/yes		 6
6	 7/yes		 6
6	 1/yes		 6
6	 6/yes		 6
6	 2/yes		 6
6	 8/yes		 6
6	 )/yes		 6
6	 9/yes		 6
6	 (/yes		 6
6	 3/yes		 6
6	 4/yes		 6
6	 0/yes		 6

Transition cover set (P). 72 entries.
Empty ( (( () (0 (0( (0) (00 (00( (00) (000 (001 (002 (003 (004 (005 (006 (007 (007( (007) (007)( (007)) (007)0 (007)1 (007)2 (007)3 (007)4 (007)5 (007)6 (007)7 (007)8 (007)9 (0070 (0071 (0072 (0073 (0075 (0076 (0077 (0078 (0079 (008 (009 (01 (02 (03 (04 (05 (06 (07 (08 (09 (1 (2 (3 (4 (5 (6 (7 (8 (9 ) 0 1 2 3 4 5 6 7 8 9 

W Set. 5 entries.
( ) 007) 07) 7) 

Number of Test Cases :342
Test cases: [(, ((, (((, ((), ((007), ((07), ((7), (), ()(, ()), ()007), ()07), ()7), (0(, (0((, (0(), (0(007), (0(07), (0(7), (0), (0)(, (0)), (0)007), (0)07), (0)7), (00(, (00((, (00(), (00(007), (00(07), (00(7), (00), (00)(, (00)), (00)007), (00)07), (00)7), (000(, (000), (000007), (00007), (0007), (001(, (001), (001007), (00107), (0017), (002(, (002), (002007), (00207), (0027), (003(, (003), (003007), (00307), (0037), (004(, (004), (004007), (00407), (0047), (005(, (005), (005007), (00507), (0057), (006(, (006), (006007), (00607), (0067), (007(, (007((, (007(), (007(007), (007(07), (007(7), (007), (007)(, (007)((, (007)(), (007)(007), (007)(07), (007)(7), (007)), (007))(, (007))), (007))007), (007))07), (007))7), (007)0(, (007)0), (007)0007), (007)007), (007)07), (007)1(, (007)1), (007)1007), (007)107), (007)17), (007)2(, (007)2), (007)2007), (007)207), (007)27), (007)3(, (007)3), (007)3007), (007)307), (007)37), (007)4(, (007)4), (007)4007), (007)407), (007)47), (007)5(, (007)5), (007)5007), (007)507), (007)57), (007)6(, (007)6), (007)6007), (007)607), (007)67), (007)7(, (007)7), (007)7007), (007)707), (007)77), (007)8(, (007)8), (007)8007), (007)807), (007)87), (007)9(, (007)9), (007)9007), (007)907), (007)97), (0070(, (0070), (0070007), (007007), (00707), (0071(, (0071), (0071007), (007107), (00717), (0072(, (0072), (0072007), (007207), (00727), (0073(, (0073), (0073007), (007307), (00737), (0075(, (0075), (0075007), (007507), (00757), (0076(, (0076), (0076007), (007607), (00767), (0077(, (0077), (0077007), (007707), (00777), (0078(, (0078), (0078007), (007807), (00787), (0079(, (0079), (0079007), (007907), (00797), (008(, (008), (008007), (00807), (0087), (009(, (009), (009007), (00907), (0097), (01(, (01), (01007), (0107), (017), (02(, (02), (02007), (0207), (027), (03(, (03), (03007), (0307), (037), (04(, (04), (04007), (0407), (047), (05(, (05), (05007), (0507), (057), (06(, (06), (06007), (0607), (067), (07(, (07), (07007), (0707), (077), (08(, (08), (08007), (0807), (087), (09(, (09), (09007), (0907), (097), (1(, (1), (1007), (107), (17), (2(, (2), (2007), (207), (27), (3(, (3), (3007), (307), (37), (4(, (4), (4007), (407), (47), (5(, (5), (5007), (507), (57), (6(, (6), (6007), (607), (67), (7(, (7), (7007), (707), (77), (8(, (8), (8007), (807), (87), (9(, (9), (9007), (907), (97), ), )(, )), )007), )07), )7), 0(, 0), 0007), 007), 07), 1(, 1), 1007), 107), 17), 2(, 2), 2007), 207), 27), 3(, 3), 3007), 307), 37), 4(, 4), 4007), 407), 47), 5(, 5), 5007), 507), 57), 6(, 6), 6007), 607), 67), 7(, 7), 7007), 707), 77), 8(, 8), 8007), 807), 87), 9(, 9), 9007), 907), 97)]

Test Case 1
( 
FSM execution begins. Input:  ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:no

Test Case 2
( ( 
FSM execution begins. Input:  ( ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 3
( ( ( 
FSM execution begins. Input:  ( ( ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 4
( ( ) 
FSM execution begins. Input:  ( ( ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 5
( ( 0 0 7 ) 
FSM execution begins. Input:  ( ( 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 6
( ( 0 7 ) 
FSM execution begins. Input:  ( ( 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 7
( ( 7 ) 
FSM execution begins. Input:  ( ( 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 8
( ) 
FSM execution begins. Input:  ( ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 9
( ) ( 
FSM execution begins. Input:  ( ) ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 10
( ) ) 
FSM execution begins. Input:  ( ) ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 11
( ) 0 0 7 ) 
FSM execution begins. Input:  ( ) 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 12
( ) 0 7 ) 
FSM execution begins. Input:  ( ) 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 13
( ) 7 ) 
FSM execution begins. Input:  ( ) 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 14
( 0 ( 
FSM execution begins. Input:  ( 0 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 15
( 0 ( ( 
FSM execution begins. Input:  ( 0 ( ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 16
( 0 ( ) 
FSM execution begins. Input:  ( 0 ( ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 17
( 0 ( 0 0 7 ) 
FSM execution begins. Input:  ( 0 ( 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 18
( 0 ( 0 7 ) 
FSM execution begins. Input:  ( 0 ( 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 19
( 0 ( 7 ) 
FSM execution begins. Input:  ( 0 ( 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 20
( 0 ) 
FSM execution begins. Input:  ( 0 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 21
( 0 ) ( 
FSM execution begins. Input:  ( 0 ) ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 22
( 0 ) ) 
FSM execution begins. Input:  ( 0 ) ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 23
( 0 ) 0 0 7 ) 
FSM execution begins. Input:  ( 0 ) 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 24
( 0 ) 0 7 ) 
FSM execution begins. Input:  ( 0 ) 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 25
( 0 ) 7 ) 
FSM execution begins. Input:  ( 0 ) 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 26
( 0 0 ( 
FSM execution begins. Input:  ( 0 0 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 27
( 0 0 ( ( 
FSM execution begins. Input:  ( 0 0 ( ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 28
( 0 0 ( ) 
FSM execution begins. Input:  ( 0 0 ( ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 29
( 0 0 ( 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 ( 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 30
( 0 0 ( 0 7 ) 
FSM execution begins. Input:  ( 0 0 ( 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 31
( 0 0 ( 7 ) 
FSM execution begins. Input:  ( 0 0 ( 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 32
( 0 0 ) 
FSM execution begins. Input:  ( 0 0 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 33
( 0 0 ) ( 
FSM execution begins. Input:  ( 0 0 ) ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 34
( 0 0 ) ) 
FSM execution begins. Input:  ( 0 0 ) ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 35
( 0 0 ) 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 ) 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 36
( 0 0 ) 0 7 ) 
FSM execution begins. Input:  ( 0 0 ) 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 37
( 0 0 ) 7 ) 
FSM execution begins. Input:  ( 0 0 ) 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: ) Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 38
( 0 0 0 ( 
FSM execution begins. Input:  ( 0 0 0 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 0 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 39
( 0 0 0 ) 
FSM execution begins. Input:  ( 0 0 0 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 0 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 40
( 0 0 0 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 0 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 0 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 41
( 0 0 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 0 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 42
( 0 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 0 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 43
( 0 0 1 ( 
FSM execution begins. Input:  ( 0 0 1 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 44
( 0 0 1 ) 
FSM execution begins. Input:  ( 0 0 1 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 45
( 0 0 1 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 1 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 46
( 0 0 1 0 7 ) 
FSM execution begins. Input:  ( 0 0 1 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 47
( 0 0 1 7 ) 
FSM execution begins. Input:  ( 0 0 1 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 48
( 0 0 2 ( 
FSM execution begins. Input:  ( 0 0 2 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 49
( 0 0 2 ) 
FSM execution begins. Input:  ( 0 0 2 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 50
( 0 0 2 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 2 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 51
( 0 0 2 0 7 ) 
FSM execution begins. Input:  ( 0 0 2 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 52
( 0 0 2 7 ) 
FSM execution begins. Input:  ( 0 0 2 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 53
( 0 0 3 ( 
FSM execution begins. Input:  ( 0 0 3 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 54
( 0 0 3 ) 
FSM execution begins. Input:  ( 0 0 3 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 55
( 0 0 3 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 3 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 56
( 0 0 3 0 7 ) 
FSM execution begins. Input:  ( 0 0 3 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 57
( 0 0 3 7 ) 
FSM execution begins. Input:  ( 0 0 3 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 58
( 0 0 4 ( 
FSM execution begins. Input:  ( 0 0 4 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 59
( 0 0 4 ) 
FSM execution begins. Input:  ( 0 0 4 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 60
( 0 0 4 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 4 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 61
( 0 0 4 0 7 ) 
FSM execution begins. Input:  ( 0 0 4 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 62
( 0 0 4 7 ) 
FSM execution begins. Input:  ( 0 0 4 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 63
( 0 0 5 ( 
FSM execution begins. Input:  ( 0 0 5 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 64
( 0 0 5 ) 
FSM execution begins. Input:  ( 0 0 5 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 65
( 0 0 5 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 5 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 66
( 0 0 5 0 7 ) 
FSM execution begins. Input:  ( 0 0 5 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 67
( 0 0 5 7 ) 
FSM execution begins. Input:  ( 0 0 5 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 68
( 0 0 6 ( 
FSM execution begins. Input:  ( 0 0 6 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 69
( 0 0 6 ) 
FSM execution begins. Input:  ( 0 0 6 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 70
( 0 0 6 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 6 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 71
( 0 0 6 0 7 ) 
FSM execution begins. Input:  ( 0 0 6 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 72
( 0 0 6 7 ) 
FSM execution begins. Input:  ( 0 0 6 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 73
( 0 0 7 ( 
FSM execution begins. Input:  ( 0 0 7 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nonononono

Test Case 74
( 0 0 7 ( ( 
FSM execution begins. Input:  ( 0 0 7 ( ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 75
( 0 0 7 ( ) 
FSM execution begins. Input:  ( 0 0 7 ( ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 76
( 0 0 7 ( 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ( 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 77
( 0 0 7 ( 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ( 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 78
( 0 0 7 ( 7 ) 
FSM execution begins. Input:  ( 0 0 7 ( 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 79
( 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyes

Test Case 80
( 0 0 7 ) ( 
FSM execution begins. Input:  ( 0 0 7 ) ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyes

Test Case 81
( 0 0 7 ) ( ( 
FSM execution begins. Input:  ( 0 0 7 ) ( ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 82
( 0 0 7 ) ( ) 
FSM execution begins. Input:  ( 0 0 7 ) ( ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 83
( 0 0 7 ) ( 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) ( 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 84
( 0 0 7 ) ( 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) ( 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 85
( 0 0 7 ) ( 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) ( 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 86
( 0 0 7 ) ) 
FSM execution begins. Input:  ( 0 0 7 ) ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyes

Test Case 87
( 0 0 7 ) ) ( 
FSM execution begins. Input:  ( 0 0 7 ) ) ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 88
( 0 0 7 ) ) ) 
FSM execution begins. Input:  ( 0 0 7 ) ) ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 89
( 0 0 7 ) ) 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) ) 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 90
( 0 0 7 ) ) 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) ) 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 91
( 0 0 7 ) ) 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) ) 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 92
( 0 0 7 ) 0 ( 
FSM execution begins. Input:  ( 0 0 7 ) 0 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 93
( 0 0 7 ) 0 ) 
FSM execution begins. Input:  ( 0 0 7 ) 0 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 94
( 0 0 7 ) 0 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 0 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 95
( 0 0 7 ) 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 96
( 0 0 7 ) 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 97
( 0 0 7 ) 1 ( 
FSM execution begins. Input:  ( 0 0 7 ) 1 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 1 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 98
( 0 0 7 ) 1 ) 
FSM execution begins. Input:  ( 0 0 7 ) 1 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 1 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 99
( 0 0 7 ) 1 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 1 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 1 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 100
( 0 0 7 ) 1 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 1 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 1 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 101
( 0 0 7 ) 1 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 1 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 1 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 102
( 0 0 7 ) 2 ( 
FSM execution begins. Input:  ( 0 0 7 ) 2 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 2 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 103
( 0 0 7 ) 2 ) 
FSM execution begins. Input:  ( 0 0 7 ) 2 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 2 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 104
( 0 0 7 ) 2 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 2 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 2 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 105
( 0 0 7 ) 2 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 2 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 2 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 106
( 0 0 7 ) 2 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 2 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 2 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 107
( 0 0 7 ) 3 ( 
FSM execution begins. Input:  ( 0 0 7 ) 3 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 3 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 108
( 0 0 7 ) 3 ) 
FSM execution begins. Input:  ( 0 0 7 ) 3 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 3 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 109
( 0 0 7 ) 3 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 3 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 3 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 110
( 0 0 7 ) 3 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 3 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 3 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 111
( 0 0 7 ) 3 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 3 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 3 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 112
( 0 0 7 ) 4 ( 
FSM execution begins. Input:  ( 0 0 7 ) 4 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 4 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 113
( 0 0 7 ) 4 ) 
FSM execution begins. Input:  ( 0 0 7 ) 4 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 4 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 114
( 0 0 7 ) 4 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 4 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 4 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 115
( 0 0 7 ) 4 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 4 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 4 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 116
( 0 0 7 ) 4 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 4 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 4 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 117
( 0 0 7 ) 5 ( 
FSM execution begins. Input:  ( 0 0 7 ) 5 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 5 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 118
( 0 0 7 ) 5 ) 
FSM execution begins. Input:  ( 0 0 7 ) 5 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 5 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 119
( 0 0 7 ) 5 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 5 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 5 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 120
( 0 0 7 ) 5 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 5 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 5 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 121
( 0 0 7 ) 5 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 5 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 5 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 122
( 0 0 7 ) 6 ( 
FSM execution begins. Input:  ( 0 0 7 ) 6 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 6 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 123
( 0 0 7 ) 6 ) 
FSM execution begins. Input:  ( 0 0 7 ) 6 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 6 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 124
( 0 0 7 ) 6 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 6 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 6 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 125
( 0 0 7 ) 6 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 6 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 6 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 126
( 0 0 7 ) 6 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 6 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 6 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 127
( 0 0 7 ) 7 ( 
FSM execution begins. Input:  ( 0 0 7 ) 7 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 128
( 0 0 7 ) 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 129
( 0 0 7 ) 7 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 7 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 130
( 0 0 7 ) 7 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 7 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 131
( 0 0 7 ) 7 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 7 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 132
( 0 0 7 ) 8 ( 
FSM execution begins. Input:  ( 0 0 7 ) 8 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 8 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 133
( 0 0 7 ) 8 ) 
FSM execution begins. Input:  ( 0 0 7 ) 8 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 8 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 134
( 0 0 7 ) 8 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 8 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 8 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 135
( 0 0 7 ) 8 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 8 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 8 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 136
( 0 0 7 ) 8 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 8 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 8 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 137
( 0 0 7 ) 9 ( 
FSM execution begins. Input:  ( 0 0 7 ) 9 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 9 Next state: 6 Output: yes
Current state: 6
 Input: ( Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 138
( 0 0 7 ) 9 ) 
FSM execution begins. Input:  ( 0 0 7 ) 9 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 9 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyes

Test Case 139
( 0 0 7 ) 9 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 9 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 9 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyesyes

Test Case 140
( 0 0 7 ) 9 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 9 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 9 Next state: 6 Output: yes
Current state: 6
 Input: 0 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyesyes

Test Case 141
( 0 0 7 ) 9 7 ) 
FSM execution begins. Input:  ( 0 0 7 ) 9 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes
Current state: 6
 Input: 9 Next state: 6 Output: yes
Current state: 6
 Input: 7 Next state: 6 Output: yes
Current state: 6
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononoyesyesyesyes

Test Case 142
( 0 0 7 0 ( 
FSM execution begins. Input:  ( 0 0 7 0 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 143
( 0 0 7 0 ) 
FSM execution begins. Input:  ( 0 0 7 0 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 144
( 0 0 7 0 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 0 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 145
( 0 0 7 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 146
( 0 0 7 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 147
( 0 0 7 1 ( 
FSM execution begins. Input:  ( 0 0 7 1 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 1 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 148
( 0 0 7 1 ) 
FSM execution begins. Input:  ( 0 0 7 1 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 1 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 149
( 0 0 7 1 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 1 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 1 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 150
( 0 0 7 1 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 1 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 1 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 151
( 0 0 7 1 7 ) 
FSM execution begins. Input:  ( 0 0 7 1 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 1 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 152
( 0 0 7 2 ( 
FSM execution begins. Input:  ( 0 0 7 2 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 2 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 153
( 0 0 7 2 ) 
FSM execution begins. Input:  ( 0 0 7 2 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 2 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 154
( 0 0 7 2 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 2 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 2 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 155
( 0 0 7 2 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 2 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 2 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 156
( 0 0 7 2 7 ) 
FSM execution begins. Input:  ( 0 0 7 2 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 2 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 157
( 0 0 7 3 ( 
FSM execution begins. Input:  ( 0 0 7 3 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 3 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 158
( 0 0 7 3 ) 
FSM execution begins. Input:  ( 0 0 7 3 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 3 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 159
( 0 0 7 3 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 3 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 3 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 160
( 0 0 7 3 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 3 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 3 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 161
( 0 0 7 3 7 ) 
FSM execution begins. Input:  ( 0 0 7 3 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 3 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 162
( 0 0 7 5 ( 
FSM execution begins. Input:  ( 0 0 7 5 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 5 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 163
( 0 0 7 5 ) 
FSM execution begins. Input:  ( 0 0 7 5 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 5 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 164
( 0 0 7 5 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 5 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 5 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 165
( 0 0 7 5 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 5 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 5 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 166
( 0 0 7 5 7 ) 
FSM execution begins. Input:  ( 0 0 7 5 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 5 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 167
( 0 0 7 6 ( 
FSM execution begins. Input:  ( 0 0 7 6 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 6 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 168
( 0 0 7 6 ) 
FSM execution begins. Input:  ( 0 0 7 6 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 6 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 169
( 0 0 7 6 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 6 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 6 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 170
( 0 0 7 6 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 6 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 6 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 171
( 0 0 7 6 7 ) 
FSM execution begins. Input:  ( 0 0 7 6 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 6 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 172
( 0 0 7 7 ( 
FSM execution begins. Input:  ( 0 0 7 7 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 173
( 0 0 7 7 ) 
FSM execution begins. Input:  ( 0 0 7 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 174
( 0 0 7 7 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 7 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 175
( 0 0 7 7 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 7 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 176
( 0 0 7 7 7 ) 
FSM execution begins. Input:  ( 0 0 7 7 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 177
( 0 0 7 8 ( 
FSM execution begins. Input:  ( 0 0 7 8 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 8 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 178
( 0 0 7 8 ) 
FSM execution begins. Input:  ( 0 0 7 8 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 8 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 179
( 0 0 7 8 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 8 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 8 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 180
( 0 0 7 8 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 8 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 8 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 181
( 0 0 7 8 7 ) 
FSM execution begins. Input:  ( 0 0 7 8 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 8 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 182
( 0 0 7 9 ( 
FSM execution begins. Input:  ( 0 0 7 9 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 9 Next state: 5 Output: no
Current state: 5
 Input: ( Next state: 5 Output: no

FSM execution completed. Final state: 5
Output pattern:nononononono

Test Case 183
( 0 0 7 9 ) 
FSM execution begins. Input:  ( 0 0 7 9 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 9 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 184
( 0 0 7 9 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 9 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 9 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononononoyes

Test Case 185
( 0 0 7 9 0 7 ) 
FSM execution begins. Input:  ( 0 0 7 9 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 9 Next state: 5 Output: no
Current state: 5
 Input: 0 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 186
( 0 0 7 9 7 ) 
FSM execution begins. Input:  ( 0 0 7 9 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: 9 Next state: 5 Output: no
Current state: 5
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 187
( 0 0 8 ( 
FSM execution begins. Input:  ( 0 0 8 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 188
( 0 0 8 ) 
FSM execution begins. Input:  ( 0 0 8 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 189
( 0 0 8 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 8 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 190
( 0 0 8 0 7 ) 
FSM execution begins. Input:  ( 0 0 8 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 191
( 0 0 8 7 ) 
FSM execution begins. Input:  ( 0 0 8 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 192
( 0 0 9 ( 
FSM execution begins. Input:  ( 0 0 9 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 193
( 0 0 9 ) 
FSM execution begins. Input:  ( 0 0 9 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 194
( 0 0 9 0 0 7 ) 
FSM execution begins. Input:  ( 0 0 9 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononononoyes

Test Case 195
( 0 0 9 0 7 ) 
FSM execution begins. Input:  ( 0 0 9 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononononono

Test Case 196
( 0 0 9 7 ) 
FSM execution begins. Input:  ( 0 0 9 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 197
( 0 1 ( 
FSM execution begins. Input:  ( 0 1 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 198
( 0 1 ) 
FSM execution begins. Input:  ( 0 1 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 199
( 0 1 0 0 7 ) 
FSM execution begins. Input:  ( 0 1 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 200
( 0 1 0 7 ) 
FSM execution begins. Input:  ( 0 1 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 201
( 0 1 7 ) 
FSM execution begins. Input:  ( 0 1 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 202
( 0 2 ( 
FSM execution begins. Input:  ( 0 2 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 203
( 0 2 ) 
FSM execution begins. Input:  ( 0 2 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 204
( 0 2 0 0 7 ) 
FSM execution begins. Input:  ( 0 2 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 205
( 0 2 0 7 ) 
FSM execution begins. Input:  ( 0 2 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 206
( 0 2 7 ) 
FSM execution begins. Input:  ( 0 2 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 207
( 0 3 ( 
FSM execution begins. Input:  ( 0 3 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 208
( 0 3 ) 
FSM execution begins. Input:  ( 0 3 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 209
( 0 3 0 0 7 ) 
FSM execution begins. Input:  ( 0 3 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 210
( 0 3 0 7 ) 
FSM execution begins. Input:  ( 0 3 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 211
( 0 3 7 ) 
FSM execution begins. Input:  ( 0 3 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 212
( 0 4 ( 
FSM execution begins. Input:  ( 0 4 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 213
( 0 4 ) 
FSM execution begins. Input:  ( 0 4 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 214
( 0 4 0 0 7 ) 
FSM execution begins. Input:  ( 0 4 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 215
( 0 4 0 7 ) 
FSM execution begins. Input:  ( 0 4 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 216
( 0 4 7 ) 
FSM execution begins. Input:  ( 0 4 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 217
( 0 5 ( 
FSM execution begins. Input:  ( 0 5 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 218
( 0 5 ) 
FSM execution begins. Input:  ( 0 5 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 219
( 0 5 0 0 7 ) 
FSM execution begins. Input:  ( 0 5 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 220
( 0 5 0 7 ) 
FSM execution begins. Input:  ( 0 5 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 221
( 0 5 7 ) 
FSM execution begins. Input:  ( 0 5 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 222
( 0 6 ( 
FSM execution begins. Input:  ( 0 6 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 223
( 0 6 ) 
FSM execution begins. Input:  ( 0 6 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 224
( 0 6 0 0 7 ) 
FSM execution begins. Input:  ( 0 6 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 225
( 0 6 0 7 ) 
FSM execution begins. Input:  ( 0 6 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 226
( 0 6 7 ) 
FSM execution begins. Input:  ( 0 6 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 227
( 0 7 ( 
FSM execution begins. Input:  ( 0 7 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 228
( 0 7 ) 
FSM execution begins. Input:  ( 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 229
( 0 7 0 0 7 ) 
FSM execution begins. Input:  ( 0 7 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 230
( 0 7 0 7 ) 
FSM execution begins. Input:  ( 0 7 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 231
( 0 7 7 ) 
FSM execution begins. Input:  ( 0 7 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 232
( 0 8 ( 
FSM execution begins. Input:  ( 0 8 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 233
( 0 8 ) 
FSM execution begins. Input:  ( 0 8 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 234
( 0 8 0 0 7 ) 
FSM execution begins. Input:  ( 0 8 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 235
( 0 8 0 7 ) 
FSM execution begins. Input:  ( 0 8 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 236
( 0 8 7 ) 
FSM execution begins. Input:  ( 0 8 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 237
( 0 9 ( 
FSM execution begins. Input:  ( 0 9 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 238
( 0 9 ) 
FSM execution begins. Input:  ( 0 9 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 239
( 0 9 0 0 7 ) 
FSM execution begins. Input:  ( 0 9 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nonononononoyes

Test Case 240
( 0 9 0 7 ) 
FSM execution begins. Input:  ( 0 9 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononononono

Test Case 241
( 0 9 7 ) 
FSM execution begins. Input:  ( 0 9 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 242
( 1 ( 
FSM execution begins. Input:  ( 1 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 243
( 1 ) 
FSM execution begins. Input:  ( 1 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 244
( 1 0 0 7 ) 
FSM execution begins. Input:  ( 1 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 245
( 1 0 7 ) 
FSM execution begins. Input:  ( 1 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 246
( 1 7 ) 
FSM execution begins. Input:  ( 1 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 1 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 247
( 2 ( 
FSM execution begins. Input:  ( 2 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 248
( 2 ) 
FSM execution begins. Input:  ( 2 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 249
( 2 0 0 7 ) 
FSM execution begins. Input:  ( 2 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 250
( 2 0 7 ) 
FSM execution begins. Input:  ( 2 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 251
( 2 7 ) 
FSM execution begins. Input:  ( 2 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 2 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 252
( 3 ( 
FSM execution begins. Input:  ( 3 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 253
( 3 ) 
FSM execution begins. Input:  ( 3 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 254
( 3 0 0 7 ) 
FSM execution begins. Input:  ( 3 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 255
( 3 0 7 ) 
FSM execution begins. Input:  ( 3 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 256
( 3 7 ) 
FSM execution begins. Input:  ( 3 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 3 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 257
( 4 ( 
FSM execution begins. Input:  ( 4 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 258
( 4 ) 
FSM execution begins. Input:  ( 4 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 259
( 4 0 0 7 ) 
FSM execution begins. Input:  ( 4 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 260
( 4 0 7 ) 
FSM execution begins. Input:  ( 4 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 261
( 4 7 ) 
FSM execution begins. Input:  ( 4 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 4 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 262
( 5 ( 
FSM execution begins. Input:  ( 5 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 263
( 5 ) 
FSM execution begins. Input:  ( 5 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 264
( 5 0 0 7 ) 
FSM execution begins. Input:  ( 5 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 265
( 5 0 7 ) 
FSM execution begins. Input:  ( 5 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 266
( 5 7 ) 
FSM execution begins. Input:  ( 5 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 5 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 267
( 6 ( 
FSM execution begins. Input:  ( 6 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 268
( 6 ) 
FSM execution begins. Input:  ( 6 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 269
( 6 0 0 7 ) 
FSM execution begins. Input:  ( 6 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 270
( 6 0 7 ) 
FSM execution begins. Input:  ( 6 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 271
( 6 7 ) 
FSM execution begins. Input:  ( 6 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 6 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 272
( 7 ( 
FSM execution begins. Input:  ( 7 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 273
( 7 ) 
FSM execution begins. Input:  ( 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 274
( 7 0 0 7 ) 
FSM execution begins. Input:  ( 7 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 275
( 7 0 7 ) 
FSM execution begins. Input:  ( 7 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 276
( 7 7 ) 
FSM execution begins. Input:  ( 7 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 277
( 8 ( 
FSM execution begins. Input:  ( 8 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 278
( 8 ) 
FSM execution begins. Input:  ( 8 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 279
( 8 0 0 7 ) 
FSM execution begins. Input:  ( 8 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 280
( 8 0 7 ) 
FSM execution begins. Input:  ( 8 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 281
( 8 7 ) 
FSM execution begins. Input:  ( 8 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 8 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 282
( 9 ( 
FSM execution begins. Input:  ( 9 ( Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 283
( 9 ) 
FSM execution begins. Input:  ( 9 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonono

Test Case 284
( 9 0 0 7 ) 
FSM execution begins. Input:  ( 9 0 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 0 Next state: 4 Output: no
Current state: 4
 Input: 7 Next state: 5 Output: no
Current state: 5
 Input: ) Next state: 6 Output: yes

FSM execution completed. Final state: 6
Output pattern:nononononoyes

Test Case 285
( 9 0 7 ) 
FSM execution begins. Input:  ( 9 0 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 0 Next state: 3 Output: no
Current state: 3
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nonononono

Test Case 286
( 9 7 ) 
FSM execution begins. Input:  ( 9 7 ) Initial state: 1
Current state: 1
 Input: ( Next state: 2 Output: no
Current state: 2
 Input: 9 Next state: 2 Output: no
Current state: 2
 Input: 7 Next state: 2 Output: no
Current state: 2
 Input: ) Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nononono

Test Case 287
) 
FSM execution begins. Input:  ) Initial state: 1
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:no

Test Case 288
) ( 
FSM execution begins. Input:  ) ( Initial state: 1
Current state: 1
 Input: ) Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 289
) ) 
FSM execution begins. Input:  ) ) Initial state: 1
Current state: 1
 Input: ) Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 290
) 0 0 7 ) 
FSM execution begins. Input:  ) 0 0 7 ) Initial state: 1
Current state: 1
 Input: ) Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 291
) 0 7 ) 
FSM execution begins. Input:  ) 0 7 ) Initial state: 1
Current state: 1
 Input: ) Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 292
) 7 ) 
FSM execution begins. Input:  ) 7 ) Initial state: 1
Current state: 1
 Input: ) Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 293
0 ( 
FSM execution begins. Input:  0 ( Initial state: 1
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 294
0 ) 
FSM execution begins. Input:  0 ) Initial state: 1
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 295
0 0 0 7 ) 
FSM execution begins. Input:  0 0 0 7 ) Initial state: 1
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 296
0 0 7 ) 
FSM execution begins. Input:  0 0 7 ) Initial state: 1
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 297
0 7 ) 
FSM execution begins. Input:  0 7 ) Initial state: 1
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 298
1 ( 
FSM execution begins. Input:  1 ( Initial state: 1
Current state: 1
 Input: 1 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 299
1 ) 
FSM execution begins. Input:  1 ) Initial state: 1
Current state: 1
 Input: 1 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 300
1 0 0 7 ) 
FSM execution begins. Input:  1 0 0 7 ) Initial state: 1
Current state: 1
 Input: 1 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 301
1 0 7 ) 
FSM execution begins. Input:  1 0 7 ) Initial state: 1
Current state: 1
 Input: 1 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 302
1 7 ) 
FSM execution begins. Input:  1 7 ) Initial state: 1
Current state: 1
 Input: 1 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 303
2 ( 
FSM execution begins. Input:  2 ( Initial state: 1
Current state: 1
 Input: 2 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 304
2 ) 
FSM execution begins. Input:  2 ) Initial state: 1
Current state: 1
 Input: 2 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 305
2 0 0 7 ) 
FSM execution begins. Input:  2 0 0 7 ) Initial state: 1
Current state: 1
 Input: 2 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 306
2 0 7 ) 
FSM execution begins. Input:  2 0 7 ) Initial state: 1
Current state: 1
 Input: 2 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 307
2 7 ) 
FSM execution begins. Input:  2 7 ) Initial state: 1
Current state: 1
 Input: 2 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 308
3 ( 
FSM execution begins. Input:  3 ( Initial state: 1
Current state: 1
 Input: 3 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 309
3 ) 
FSM execution begins. Input:  3 ) Initial state: 1
Current state: 1
 Input: 3 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 310
3 0 0 7 ) 
FSM execution begins. Input:  3 0 0 7 ) Initial state: 1
Current state: 1
 Input: 3 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 311
3 0 7 ) 
FSM execution begins. Input:  3 0 7 ) Initial state: 1
Current state: 1
 Input: 3 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 312
3 7 ) 
FSM execution begins. Input:  3 7 ) Initial state: 1
Current state: 1
 Input: 3 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 313
4 ( 
FSM execution begins. Input:  4 ( Initial state: 1
Current state: 1
 Input: 4 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 314
4 ) 
FSM execution begins. Input:  4 ) Initial state: 1
Current state: 1
 Input: 4 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 315
4 0 0 7 ) 
FSM execution begins. Input:  4 0 0 7 ) Initial state: 1
Current state: 1
 Input: 4 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 316
4 0 7 ) 
FSM execution begins. Input:  4 0 7 ) Initial state: 1
Current state: 1
 Input: 4 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 317
4 7 ) 
FSM execution begins. Input:  4 7 ) Initial state: 1
Current state: 1
 Input: 4 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 318
5 ( 
FSM execution begins. Input:  5 ( Initial state: 1
Current state: 1
 Input: 5 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 319
5 ) 
FSM execution begins. Input:  5 ) Initial state: 1
Current state: 1
 Input: 5 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 320
5 0 0 7 ) 
FSM execution begins. Input:  5 0 0 7 ) Initial state: 1
Current state: 1
 Input: 5 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 321
5 0 7 ) 
FSM execution begins. Input:  5 0 7 ) Initial state: 1
Current state: 1
 Input: 5 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 322
5 7 ) 
FSM execution begins. Input:  5 7 ) Initial state: 1
Current state: 1
 Input: 5 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 323
6 ( 
FSM execution begins. Input:  6 ( Initial state: 1
Current state: 1
 Input: 6 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 324
6 ) 
FSM execution begins. Input:  6 ) Initial state: 1
Current state: 1
 Input: 6 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 325
6 0 0 7 ) 
FSM execution begins. Input:  6 0 0 7 ) Initial state: 1
Current state: 1
 Input: 6 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 326
6 0 7 ) 
FSM execution begins. Input:  6 0 7 ) Initial state: 1
Current state: 1
 Input: 6 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 327
6 7 ) 
FSM execution begins. Input:  6 7 ) Initial state: 1
Current state: 1
 Input: 6 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 328
7 ( 
FSM execution begins. Input:  7 ( Initial state: 1
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 329
7 ) 
FSM execution begins. Input:  7 ) Initial state: 1
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 330
7 0 0 7 ) 
FSM execution begins. Input:  7 0 0 7 ) Initial state: 1
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 331
7 0 7 ) 
FSM execution begins. Input:  7 0 7 ) Initial state: 1
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 332
7 7 ) 
FSM execution begins. Input:  7 7 ) Initial state: 1
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 333
8 ( 
FSM execution begins. Input:  8 ( Initial state: 1
Current state: 1
 Input: 8 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 334
8 ) 
FSM execution begins. Input:  8 ) Initial state: 1
Current state: 1
 Input: 8 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 335
8 0 0 7 ) 
FSM execution begins. Input:  8 0 0 7 ) Initial state: 1
Current state: 1
 Input: 8 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 336
8 0 7 ) 
FSM execution begins. Input:  8 0 7 ) Initial state: 1
Current state: 1
 Input: 8 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 337
8 7 ) 
FSM execution begins. Input:  8 7 ) Initial state: 1
Current state: 1
 Input: 8 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

Test Case 338
9 ( 
FSM execution begins. Input:  9 ( Initial state: 1
Current state: 1
 Input: 9 Next state: 1 Output: no
Current state: 1
 Input: ( Next state: 2 Output: no

FSM execution completed. Final state: 2
Output pattern:nono

Test Case 339
9 ) 
FSM execution begins. Input:  9 ) Initial state: 1
Current state: 1
 Input: 9 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nono

Test Case 340
9 0 0 7 ) 
FSM execution begins. Input:  9 0 0 7 ) Initial state: 1
Current state: 1
 Input: 9 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonononono

Test Case 341
9 0 7 ) 
FSM execution begins. Input:  9 0 7 ) Initial state: 1
Current state: 1
 Input: 9 Next state: 1 Output: no
Current state: 1
 Input: 0 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nononono

Test Case 342
9 7 ) 
FSM execution begins. Input:  9 7 ) Initial state: 1
Current state: 1
 Input: 9 Next state: 1 Output: no
Current state: 1
 Input: 7 Next state: 1 Output: no
Current state: 1
 Input: ) Next state: 1 Output: no

FSM execution completed. Final state: 1
Output pattern:nonono

//Generated JUnit test for test case 1: (
public void testCase1(){
	assertFalse(bondRegex("no"));
}

//Generated JUnit test for test case 2: ( (
public void testCase2(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 3: ( ( (
public void testCase3(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 4: ( ( )
public void testCase4(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 5: ( ( 0 0 7 )
public void testCase5(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 6: ( ( 0 7 )
public void testCase6(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 7: ( ( 7 )
public void testCase7(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 8: ( )
public void testCase8(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 9: ( ) (
public void testCase9(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 10: ( ) )
public void testCase10(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 11: ( ) 0 0 7 )
public void testCase11(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 12: ( ) 0 7 )
public void testCase12(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 13: ( ) 7 )
public void testCase13(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 14: ( 0 (
public void testCase14(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 15: ( 0 ( (
public void testCase15(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 16: ( 0 ( )
public void testCase16(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 17: ( 0 ( 0 0 7 )
public void testCase17(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 18: ( 0 ( 0 7 )
public void testCase18(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 19: ( 0 ( 7 )
public void testCase19(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 20: ( 0 )
public void testCase20(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 21: ( 0 ) (
public void testCase21(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 22: ( 0 ) )
public void testCase22(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 23: ( 0 ) 0 0 7 )
public void testCase23(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 24: ( 0 ) 0 7 )
public void testCase24(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 25: ( 0 ) 7 )
public void testCase25(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 26: ( 0 0 (
public void testCase26(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 27: ( 0 0 ( (
public void testCase27(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 28: ( 0 0 ( )
public void testCase28(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 29: ( 0 0 ( 0 0 7 )
public void testCase29(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 30: ( 0 0 ( 0 7 )
public void testCase30(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 31: ( 0 0 ( 7 )
public void testCase31(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 32: ( 0 0 )
public void testCase32(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 33: ( 0 0 ) (
public void testCase33(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 34: ( 0 0 ) )
public void testCase34(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 35: ( 0 0 ) 0 0 7 )
public void testCase35(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 36: ( 0 0 ) 0 7 )
public void testCase36(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 37: ( 0 0 ) 7 )
public void testCase37(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 38: ( 0 0 0 (
public void testCase38(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 39: ( 0 0 0 )
public void testCase39(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 40: ( 0 0 0 0 0 7 )
public void testCase40(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 41: ( 0 0 0 0 7 )
public void testCase41(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 42: ( 0 0 0 7 )
public void testCase42(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 43: ( 0 0 1 (
public void testCase43(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 44: ( 0 0 1 )
public void testCase44(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 45: ( 0 0 1 0 0 7 )
public void testCase45(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 46: ( 0 0 1 0 7 )
public void testCase46(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 47: ( 0 0 1 7 )
public void testCase47(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 48: ( 0 0 2 (
public void testCase48(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 49: ( 0 0 2 )
public void testCase49(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 50: ( 0 0 2 0 0 7 )
public void testCase50(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 51: ( 0 0 2 0 7 )
public void testCase51(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 52: ( 0 0 2 7 )
public void testCase52(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 53: ( 0 0 3 (
public void testCase53(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 54: ( 0 0 3 )
public void testCase54(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 55: ( 0 0 3 0 0 7 )
public void testCase55(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 56: ( 0 0 3 0 7 )
public void testCase56(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 57: ( 0 0 3 7 )
public void testCase57(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 58: ( 0 0 4 (
public void testCase58(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 59: ( 0 0 4 )
public void testCase59(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 60: ( 0 0 4 0 0 7 )
public void testCase60(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 61: ( 0 0 4 0 7 )
public void testCase61(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 62: ( 0 0 4 7 )
public void testCase62(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 63: ( 0 0 5 (
public void testCase63(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 64: ( 0 0 5 )
public void testCase64(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 65: ( 0 0 5 0 0 7 )
public void testCase65(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 66: ( 0 0 5 0 7 )
public void testCase66(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 67: ( 0 0 5 7 )
public void testCase67(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 68: ( 0 0 6 (
public void testCase68(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 69: ( 0 0 6 )
public void testCase69(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 70: ( 0 0 6 0 0 7 )
public void testCase70(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 71: ( 0 0 6 0 7 )
public void testCase71(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 72: ( 0 0 6 7 )
public void testCase72(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 73: ( 0 0 7 (
public void testCase73(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 74: ( 0 0 7 ( (
public void testCase74(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 75: ( 0 0 7 ( )
public void testCase75(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 76: ( 0 0 7 ( 0 0 7 )
public void testCase76(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 77: ( 0 0 7 ( 0 7 )
public void testCase77(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 78: ( 0 0 7 ( 7 )
public void testCase78(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 79: ( 0 0 7 )
public void testCase79(){
	assertTrue(bondRegex("nonononoyes"));
}

//Generated JUnit test for test case 80: ( 0 0 7 ) (
public void testCase80(){
	assertTrue(bondRegex("nonononoyesyes"));
}

//Generated JUnit test for test case 81: ( 0 0 7 ) ( (
public void testCase81(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 82: ( 0 0 7 ) ( )
public void testCase82(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 83: ( 0 0 7 ) ( 0 0 7 )
public void testCase83(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 84: ( 0 0 7 ) ( 0 7 )
public void testCase84(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 85: ( 0 0 7 ) ( 7 )
public void testCase85(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 86: ( 0 0 7 ) )
public void testCase86(){
	assertTrue(bondRegex("nonononoyesyes"));
}

//Generated JUnit test for test case 87: ( 0 0 7 ) ) (
public void testCase87(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 88: ( 0 0 7 ) ) )
public void testCase88(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 89: ( 0 0 7 ) ) 0 0 7 )
public void testCase89(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 90: ( 0 0 7 ) ) 0 7 )
public void testCase90(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 91: ( 0 0 7 ) ) 7 )
public void testCase91(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 92: ( 0 0 7 ) 0 (
public void testCase92(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 93: ( 0 0 7 ) 0 )
public void testCase93(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 94: ( 0 0 7 ) 0 0 0 7 )
public void testCase94(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 95: ( 0 0 7 ) 0 0 7 )
public void testCase95(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 96: ( 0 0 7 ) 0 7 )
public void testCase96(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 97: ( 0 0 7 ) 1 (
public void testCase97(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 98: ( 0 0 7 ) 1 )
public void testCase98(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 99: ( 0 0 7 ) 1 0 0 7 )
public void testCase99(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 100: ( 0 0 7 ) 1 0 7 )
public void testCase100(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 101: ( 0 0 7 ) 1 7 )
public void testCase101(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 102: ( 0 0 7 ) 2 (
public void testCase102(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 103: ( 0 0 7 ) 2 )
public void testCase103(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 104: ( 0 0 7 ) 2 0 0 7 )
public void testCase104(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 105: ( 0 0 7 ) 2 0 7 )
public void testCase105(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 106: ( 0 0 7 ) 2 7 )
public void testCase106(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 107: ( 0 0 7 ) 3 (
public void testCase107(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 108: ( 0 0 7 ) 3 )
public void testCase108(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 109: ( 0 0 7 ) 3 0 0 7 )
public void testCase109(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 110: ( 0 0 7 ) 3 0 7 )
public void testCase110(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 111: ( 0 0 7 ) 3 7 )
public void testCase111(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 112: ( 0 0 7 ) 4 (
public void testCase112(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 113: ( 0 0 7 ) 4 )
public void testCase113(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 114: ( 0 0 7 ) 4 0 0 7 )
public void testCase114(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 115: ( 0 0 7 ) 4 0 7 )
public void testCase115(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 116: ( 0 0 7 ) 4 7 )
public void testCase116(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 117: ( 0 0 7 ) 5 (
public void testCase117(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 118: ( 0 0 7 ) 5 )
public void testCase118(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 119: ( 0 0 7 ) 5 0 0 7 )
public void testCase119(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 120: ( 0 0 7 ) 5 0 7 )
public void testCase120(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 121: ( 0 0 7 ) 5 7 )
public void testCase121(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 122: ( 0 0 7 ) 6 (
public void testCase122(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 123: ( 0 0 7 ) 6 )
public void testCase123(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 124: ( 0 0 7 ) 6 0 0 7 )
public void testCase124(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 125: ( 0 0 7 ) 6 0 7 )
public void testCase125(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 126: ( 0 0 7 ) 6 7 )
public void testCase126(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 127: ( 0 0 7 ) 7 (
public void testCase127(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 128: ( 0 0 7 ) 7 )
public void testCase128(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 129: ( 0 0 7 ) 7 0 0 7 )
public void testCase129(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 130: ( 0 0 7 ) 7 0 7 )
public void testCase130(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 131: ( 0 0 7 ) 7 7 )
public void testCase131(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 132: ( 0 0 7 ) 8 (
public void testCase132(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 133: ( 0 0 7 ) 8 )
public void testCase133(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 134: ( 0 0 7 ) 8 0 0 7 )
public void testCase134(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 135: ( 0 0 7 ) 8 0 7 )
public void testCase135(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 136: ( 0 0 7 ) 8 7 )
public void testCase136(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 137: ( 0 0 7 ) 9 (
public void testCase137(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 138: ( 0 0 7 ) 9 )
public void testCase138(){
	assertTrue(bondRegex("nonononoyesyesyes"));
}

//Generated JUnit test for test case 139: ( 0 0 7 ) 9 0 0 7 )
public void testCase139(){
	assertTrue(bondRegex("nonononoyesyesyesyesyesyes"));
}

//Generated JUnit test for test case 140: ( 0 0 7 ) 9 0 7 )
public void testCase140(){
	assertTrue(bondRegex("nonononoyesyesyesyesyes"));
}

//Generated JUnit test for test case 141: ( 0 0 7 ) 9 7 )
public void testCase141(){
	assertTrue(bondRegex("nonononoyesyesyesyes"));
}

//Generated JUnit test for test case 142: ( 0 0 7 0 (
public void testCase142(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 143: ( 0 0 7 0 )
public void testCase143(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 144: ( 0 0 7 0 0 0 7 )
public void testCase144(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 145: ( 0 0 7 0 0 7 )
public void testCase145(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 146: ( 0 0 7 0 7 )
public void testCase146(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 147: ( 0 0 7 1 (
public void testCase147(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 148: ( 0 0 7 1 )
public void testCase148(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 149: ( 0 0 7 1 0 0 7 )
public void testCase149(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 150: ( 0 0 7 1 0 7 )
public void testCase150(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 151: ( 0 0 7 1 7 )
public void testCase151(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 152: ( 0 0 7 2 (
public void testCase152(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 153: ( 0 0 7 2 )
public void testCase153(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 154: ( 0 0 7 2 0 0 7 )
public void testCase154(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 155: ( 0 0 7 2 0 7 )
public void testCase155(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 156: ( 0 0 7 2 7 )
public void testCase156(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 157: ( 0 0 7 3 (
public void testCase157(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 158: ( 0 0 7 3 )
public void testCase158(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 159: ( 0 0 7 3 0 0 7 )
public void testCase159(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 160: ( 0 0 7 3 0 7 )
public void testCase160(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 161: ( 0 0 7 3 7 )
public void testCase161(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 162: ( 0 0 7 5 (
public void testCase162(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 163: ( 0 0 7 5 )
public void testCase163(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 164: ( 0 0 7 5 0 0 7 )
public void testCase164(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 165: ( 0 0 7 5 0 7 )
public void testCase165(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 166: ( 0 0 7 5 7 )
public void testCase166(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 167: ( 0 0 7 6 (
public void testCase167(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 168: ( 0 0 7 6 )
public void testCase168(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 169: ( 0 0 7 6 0 0 7 )
public void testCase169(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 170: ( 0 0 7 6 0 7 )
public void testCase170(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 171: ( 0 0 7 6 7 )
public void testCase171(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 172: ( 0 0 7 7 (
public void testCase172(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 173: ( 0 0 7 7 )
public void testCase173(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 174: ( 0 0 7 7 0 0 7 )
public void testCase174(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 175: ( 0 0 7 7 0 7 )
public void testCase175(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 176: ( 0 0 7 7 7 )
public void testCase176(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 177: ( 0 0 7 8 (
public void testCase177(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 178: ( 0 0 7 8 )
public void testCase178(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 179: ( 0 0 7 8 0 0 7 )
public void testCase179(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 180: ( 0 0 7 8 0 7 )
public void testCase180(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 181: ( 0 0 7 8 7 )
public void testCase181(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 182: ( 0 0 7 9 (
public void testCase182(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 183: ( 0 0 7 9 )
public void testCase183(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 184: ( 0 0 7 9 0 0 7 )
public void testCase184(){
	assertTrue(bondRegex("nonononononononoyes"));
}

//Generated JUnit test for test case 185: ( 0 0 7 9 0 7 )
public void testCase185(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 186: ( 0 0 7 9 7 )
public void testCase186(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 187: ( 0 0 8 (
public void testCase187(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 188: ( 0 0 8 )
public void testCase188(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 189: ( 0 0 8 0 0 7 )
public void testCase189(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 190: ( 0 0 8 0 7 )
public void testCase190(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 191: ( 0 0 8 7 )
public void testCase191(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 192: ( 0 0 9 (
public void testCase192(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 193: ( 0 0 9 )
public void testCase193(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 194: ( 0 0 9 0 0 7 )
public void testCase194(){
	assertTrue(bondRegex("nononononononoyes"));
}

//Generated JUnit test for test case 195: ( 0 0 9 0 7 )
public void testCase195(){
	assertFalse(bondRegex("nonononononono"));
}

//Generated JUnit test for test case 196: ( 0 0 9 7 )
public void testCase196(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 197: ( 0 1 (
public void testCase197(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 198: ( 0 1 )
public void testCase198(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 199: ( 0 1 0 0 7 )
public void testCase199(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 200: ( 0 1 0 7 )
public void testCase200(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 201: ( 0 1 7 )
public void testCase201(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 202: ( 0 2 (
public void testCase202(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 203: ( 0 2 )
public void testCase203(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 204: ( 0 2 0 0 7 )
public void testCase204(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 205: ( 0 2 0 7 )
public void testCase205(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 206: ( 0 2 7 )
public void testCase206(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 207: ( 0 3 (
public void testCase207(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 208: ( 0 3 )
public void testCase208(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 209: ( 0 3 0 0 7 )
public void testCase209(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 210: ( 0 3 0 7 )
public void testCase210(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 211: ( 0 3 7 )
public void testCase211(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 212: ( 0 4 (
public void testCase212(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 213: ( 0 4 )
public void testCase213(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 214: ( 0 4 0 0 7 )
public void testCase214(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 215: ( 0 4 0 7 )
public void testCase215(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 216: ( 0 4 7 )
public void testCase216(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 217: ( 0 5 (
public void testCase217(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 218: ( 0 5 )
public void testCase218(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 219: ( 0 5 0 0 7 )
public void testCase219(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 220: ( 0 5 0 7 )
public void testCase220(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 221: ( 0 5 7 )
public void testCase221(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 222: ( 0 6 (
public void testCase222(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 223: ( 0 6 )
public void testCase223(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 224: ( 0 6 0 0 7 )
public void testCase224(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 225: ( 0 6 0 7 )
public void testCase225(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 226: ( 0 6 7 )
public void testCase226(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 227: ( 0 7 (
public void testCase227(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 228: ( 0 7 )
public void testCase228(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 229: ( 0 7 0 0 7 )
public void testCase229(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 230: ( 0 7 0 7 )
public void testCase230(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 231: ( 0 7 7 )
public void testCase231(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 232: ( 0 8 (
public void testCase232(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 233: ( 0 8 )
public void testCase233(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 234: ( 0 8 0 0 7 )
public void testCase234(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 235: ( 0 8 0 7 )
public void testCase235(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 236: ( 0 8 7 )
public void testCase236(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 237: ( 0 9 (
public void testCase237(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 238: ( 0 9 )
public void testCase238(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 239: ( 0 9 0 0 7 )
public void testCase239(){
	assertTrue(bondRegex("nonononononoyes"));
}

//Generated JUnit test for test case 240: ( 0 9 0 7 )
public void testCase240(){
	assertFalse(bondRegex("nononononono"));
}

//Generated JUnit test for test case 241: ( 0 9 7 )
public void testCase241(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 242: ( 1 (
public void testCase242(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 243: ( 1 )
public void testCase243(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 244: ( 1 0 0 7 )
public void testCase244(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 245: ( 1 0 7 )
public void testCase245(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 246: ( 1 7 )
public void testCase246(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 247: ( 2 (
public void testCase247(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 248: ( 2 )
public void testCase248(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 249: ( 2 0 0 7 )
public void testCase249(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 250: ( 2 0 7 )
public void testCase250(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 251: ( 2 7 )
public void testCase251(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 252: ( 3 (
public void testCase252(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 253: ( 3 )
public void testCase253(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 254: ( 3 0 0 7 )
public void testCase254(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 255: ( 3 0 7 )
public void testCase255(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 256: ( 3 7 )
public void testCase256(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 257: ( 4 (
public void testCase257(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 258: ( 4 )
public void testCase258(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 259: ( 4 0 0 7 )
public void testCase259(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 260: ( 4 0 7 )
public void testCase260(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 261: ( 4 7 )
public void testCase261(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 262: ( 5 (
public void testCase262(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 263: ( 5 )
public void testCase263(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 264: ( 5 0 0 7 )
public void testCase264(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 265: ( 5 0 7 )
public void testCase265(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 266: ( 5 7 )
public void testCase266(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 267: ( 6 (
public void testCase267(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 268: ( 6 )
public void testCase268(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 269: ( 6 0 0 7 )
public void testCase269(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 270: ( 6 0 7 )
public void testCase270(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 271: ( 6 7 )
public void testCase271(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 272: ( 7 (
public void testCase272(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 273: ( 7 )
public void testCase273(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 274: ( 7 0 0 7 )
public void testCase274(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 275: ( 7 0 7 )
public void testCase275(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 276: ( 7 7 )
public void testCase276(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 277: ( 8 (
public void testCase277(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 278: ( 8 )
public void testCase278(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 279: ( 8 0 0 7 )
public void testCase279(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 280: ( 8 0 7 )
public void testCase280(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 281: ( 8 7 )
public void testCase281(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 282: ( 9 (
public void testCase282(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 283: ( 9 )
public void testCase283(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 284: ( 9 0 0 7 )
public void testCase284(){
	assertTrue(bondRegex("nononononoyes"));
}

//Generated JUnit test for test case 285: ( 9 0 7 )
public void testCase285(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 286: ( 9 7 )
public void testCase286(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 287: )
public void testCase287(){
	assertFalse(bondRegex("no"));
}

//Generated JUnit test for test case 288: ) (
public void testCase288(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 289: ) )
public void testCase289(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 290: ) 0 0 7 )
public void testCase290(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 291: ) 0 7 )
public void testCase291(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 292: ) 7 )
public void testCase292(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 293: 0 (
public void testCase293(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 294: 0 )
public void testCase294(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 295: 0 0 0 7 )
public void testCase295(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 296: 0 0 7 )
public void testCase296(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 297: 0 7 )
public void testCase297(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 298: 1 (
public void testCase298(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 299: 1 )
public void testCase299(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 300: 1 0 0 7 )
public void testCase300(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 301: 1 0 7 )
public void testCase301(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 302: 1 7 )
public void testCase302(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 303: 2 (
public void testCase303(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 304: 2 )
public void testCase304(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 305: 2 0 0 7 )
public void testCase305(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 306: 2 0 7 )
public void testCase306(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 307: 2 7 )
public void testCase307(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 308: 3 (
public void testCase308(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 309: 3 )
public void testCase309(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 310: 3 0 0 7 )
public void testCase310(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 311: 3 0 7 )
public void testCase311(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 312: 3 7 )
public void testCase312(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 313: 4 (
public void testCase313(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 314: 4 )
public void testCase314(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 315: 4 0 0 7 )
public void testCase315(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 316: 4 0 7 )
public void testCase316(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 317: 4 7 )
public void testCase317(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 318: 5 (
public void testCase318(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 319: 5 )
public void testCase319(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 320: 5 0 0 7 )
public void testCase320(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 321: 5 0 7 )
public void testCase321(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 322: 5 7 )
public void testCase322(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 323: 6 (
public void testCase323(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 324: 6 )
public void testCase324(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 325: 6 0 0 7 )
public void testCase325(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 326: 6 0 7 )
public void testCase326(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 327: 6 7 )
public void testCase327(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 328: 7 (
public void testCase328(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 329: 7 )
public void testCase329(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 330: 7 0 0 7 )
public void testCase330(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 331: 7 0 7 )
public void testCase331(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 332: 7 7 )
public void testCase332(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 333: 8 (
public void testCase333(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 334: 8 )
public void testCase334(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 335: 8 0 0 7 )
public void testCase335(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 336: 8 0 7 )
public void testCase336(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 337: 8 7 )
public void testCase337(){
	assertFalse(bondRegex("nonono"));
}

//Generated JUnit test for test case 338: 9 (
public void testCase338(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 339: 9 )
public void testCase339(){
	assertFalse(bondRegex("nono"));
}

//Generated JUnit test for test case 340: 9 0 0 7 )
public void testCase340(){
	assertFalse(bondRegex("nonononono"));
}

//Generated JUnit test for test case 341: 9 0 7 )
public void testCase341(){
	assertFalse(bondRegex("nononono"));
}

//Generated JUnit test for test case 342: 9 7 )
public void testCase342(){
	assertFalse(bondRegex("nonono"));
}
